name: CD - Deploy Vercel
description: >
  Continuous Delivery to Build and Deploy on Vercel
on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

permissions:
  contents: read
  actions: read

jobs:
  deploy:
    name: Deploy para Vercel
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      TZ: America/Sao_Paulo
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - name: Baixar artifact do CI (dist)
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ github.token }}

      - name: Setup Vercel Project Link
        run: |
          mkdir -p .vercel
          cat > .vercel/project.json << 'JSON'
          {
            "projectId": "${VERCEL_PROJECT_ID}",
            "orgId": "${VERCEL_ORG_ID}"
          }
          JSON

      - name: Vercel Pull (Preview)
        if: ${{ github.event.workflow_run.head_branch != 'main' || github.event.workflow_run.event == 'pull_request' }}
        run: npx vercel pull --yes --environment=preview --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"

      - name: Deploy Preview na Vercel
        if: ${{ github.event.workflow_run.head_branch != 'main' || github.event.workflow_run.event == 'pull_request' }}
        run: npx vercel deploy dist --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"

      - name: Vercel Pull (Production)
        if: ${{ github.event.workflow_run.head_branch == 'main' }}
        run: npx vercel pull --yes --environment=production --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"

      - name: Deploy para Produção na Vercel
        if: ${{ github.event.workflow_run.head_branch == 'main' }}
        run: npx vercel deploy dist --prod --token "$VERCEL_TOKEN" --scope "$VERCEL_ORG_ID"