name: CI/CD Pipeline

# Triggers do workflow
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Definição dos jobs
jobs:
  test:
    name: Executar Testes
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    # 1. Checkout do código
    - name: Checkout código
      uses: actions/checkout@v4
    
    # 2. Configurar Node.js
    - name: Configurar Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    # 3. Instalar dependências
    - name: Instalar dependências
      run: npm ci
    
    # 4. Verificar código
    - name: Verificar sintaxe do código
      run: |
        echo "Verificando sintaxe do código..."
        node -c src/script.js
    
    # 5. Executar testes
    - name: Executar testes
      run: npm test
    
    # 6. Gerar relatório de cobertura
    - name: Gerar cobertura de testes
      run: npm test -- --coverage
      continue-on-error: true

  build:
    name: Build do Projeto
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    # 1. Checkout do código
    - name: Checkout código
      uses: actions/checkout@v4
    
    # 2. Configurar Node.js
    - name: Configurar Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    # 3. Instalar dependências
    - name: Instalar dependências
      run: npm ci
    
    # 4. Build do projeto
    - name: Build do projeto
      run: |
        echo "Preparando arquivos para produção..."
        mkdir -p dist
        cp -r src/* dist/
        cp index.html dist/ 2>/dev/null || echo "index.html copiado da raiz"
        echo "Build concluído com sucesso!"
    
    # 5. Upload dos artefatos
    - name: Upload artefatos
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        retention-days: 30
